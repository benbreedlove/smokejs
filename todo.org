* smokejs roadmap
** Tasks for RC1
** RC1 reader facing requirements

*** Make markdown content work
**** done Make a dust filter to turn markdown into html
**** done Write tests for the markdown->html filter (if it doesn't exist already)
**** done Hook the markdown filter into our existing render function
*** THIS WAS DONE POORLY
**** So right now we call out to a special dust function to drag in content
**** NO!
**** done Make markdown content a model and a view like everthing else
**** done Make that view convert from markdown to html in beforeRender
**** done make that model look for it's content in the way mirrors provides
**** TODO Axe all the stuff that requires picking through the DOM looking for stuff to render afterwards. This means meta tags, now.
**** TODO our markdown renderer is stupid and does not allow dust tags. Tell it to stop fucking w/ quote marks

*** Splash Pages
**** TODO Create a schema for splash page components
**** TODO Write up a spec for what you want lists of lists from mirrors to look like
***** TODO Submit a ticket or something with the spec to the mirrors project
**** TODO Make a collection of collections and a view in hivemind to handle splash pages
**** TODO Figure out and implement the best way of loading a lot of lists at a time.
**** TODO Figure out if we must allow arbitrary HTML elements or if we can put that in a template
***** If we have to, make a view for arbitrary HTML 
**** BLOCKED Make a proof of concept splash page (perhaps the homepage or a special report page)
**** BLOCKED Make the templates for splash pages
***** BLOCKED Make homepage
***** BLOCKED Have a plan for how to make something like http://www.motherjones.com/special-reports/2012/12/guns-in-america-mass-shootings

*** TODO Make hivemind subclasses and templates for all pieces of an article we'd like to edit separately
**** If we want to add magic when you click on (for instance) a headline, it needs it's own view
**** TODO have a brief discussion (probably w/ cam) about how to break down the different parts of an article/blogpost/photoessay/whatever
**** TODO make subclasses and templates based on product of this discussion
**** TODO update article and topic templates based on new subclasses

*** TODO Make hivemind subclasses and templates for all the media types
**** TODO Make a list of all the different media types for our content
***** Known media types:
***** photoessay, needs subclass and template
***** blog post, needs subclass and template
***** article, needs template
*** TODO Make templates for asssets showing up not on a dedicated page
    - [ ] Mininav list is needed for inside article content
    - [ ] Article list for front page
    - [ ] Author featured based article list for front page
    - Way more. Find them and make them

*** Make the templates for article list pages
**** TODO Make the politics section page
**** TODO Make the environment section page
**** TODO Make the culture section page
**** TODO Make a topics page


** RC1 edit staff facing requirements

*** Make content editor
**** TODO Implement a save-as-markdown function for medium-editor
**** TODO Improve the insert image mechanism in medium-editor
**** TODO Make it allow for editing image URLs without the delete/re-add

*** Make asset editor form
**** TODO Decide how to generate forms in the content editor
***** Needs to either use the schema from mirrors-schema to make a form, or make a form for each media type
***** Needs to incorporate content editor

*** Make curation interface
**** TODO Edit wants the ability to put what they think is important at the top of our lists of content. When they don't curate it should have sane defaults
**** TODO This should include a datetime selector which ties into a scheduler on mirrors so that edit can (for instance) select the stories that will appear in tomorrows front page slider

** Nice to haves

*** Make even faster.
**** TODO Preload articles on mouseover
**** TODO Put content in localstorage
**** TODO Examine the possibility of storing assets in localstorage
**** TODO Find out if we get a speed win out of keeping article views around instead of trashing and reupping views
**** TODO Look for bottlenecks using a firebug plugin
